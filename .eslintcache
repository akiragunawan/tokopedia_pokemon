[{"D:\\pokemon\\src\\index.js":"1","D:\\pokemon\\src\\App.js":"2","D:\\pokemon\\src\\reportWebVitals.js":"3","D:\\pokemon\\src\\component\\GetPokemon.js":"4","D:\\pokemon\\src\\component\\poke_detail.js":"5","D:\\pokemon\\src\\component\\nav.js":"6","D:\\pokemon\\src\\component\\mypokemon.js":"7"},{"size":480,"mtime":1610560244752,"results":"8","hashOfConfig":"9"},{"size":931,"mtime":1610948993209,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2256,"mtime":1610966517033,"results":"12","hashOfConfig":"9"},{"size":5853,"mtime":1610941354999,"results":"13","hashOfConfig":"9"},{"size":3504,"mtime":1610967391295,"results":"14","hashOfConfig":"9"},{"size":3150,"mtime":1610967291102,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ohqn8g",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\pokemon\\src\\index.js",[],["32","33"],"D:\\pokemon\\src\\App.js",[],"D:\\pokemon\\src\\reportWebVitals.js",[],"D:\\pokemon\\src\\component\\GetPokemon.js",["34"],"D:\\pokemon\\src\\component\\poke_detail.js",["35"],"import React, { useState } from \"react\";\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport '../style.css';\r\nimport masterball from '../assets/image/master_ball.png'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n\r\nconst GET_POKEMONS_DETAIL = gql`\r\n  query pokemon($name: String!) {\r\n  pokemon(name: $name) {\r\n    id\r\n    name\r\n    sprites {\r\n      front_default\r\n    }\r\n    moves {\r\n      move {\r\n        name\r\n      }\r\n    }\r\n    types {\r\n      type {\r\n        name\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nfunction Poke_Detail({ match }) {\r\n    const MySwal = withReactContent(Swal);\r\n    const [name] = useState(match.params.id);\r\n\r\n    const [number, setNumber] = useState(Math.round(Math.random()));\r\n    const { error, loading, data } = useQuery(GET_POKEMONS_DETAIL, {\r\n        variables: {\r\n            name\r\n        }\r\n    });\r\n    var db;\r\n    var request = window.indexedDB.open(\"pokemon_data\", 1);\r\n    request.onerror = function (event) {\r\n        console.log(\"error: \");\r\n    };\r\n\r\n    request.onsuccess = function (event) {\r\n        db = request.result;\r\n        console.log(db);\r\n\r\n    };\r\n\r\n    request.onupgradeneeded = function (event) {\r\n        var db = event.target.result;\r\n        db.createObjectStore(\"data\", {\r\n            keyPath: \"id\"\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error :(</p>;\r\n\r\n\r\n    return (<div className=\"detail_page\">\r\n        <div className=\"data_center\">\r\n            <img className=\"img_poke_detail\" src={data.pokemon.sprites.front_default} alt=\"\" width=\"300\" />\r\n\r\n        </div>\r\n        <div className=\"poke_name\">\r\n            <h1>{match.params.id}</h1>\r\n        </div>\r\n        <div className=\"type_div\">\r\n            {data.pokemon.types.map(({ type }) => (\r\n                <h2 className=\"poke_type\">{type.name}</h2>\r\n            ))}\r\n        </div>\r\n\r\n        <div className=\"moves_container\">\r\n            <div className=\"moves_title_div\">\r\n                <h1 className=\"moves_title\">Moves</h1>\r\n            </div>\r\n            <div className=\"moves_div\">\r\n                {data.pokemon.moves.map(({ move }) => (\r\n                    <h3 className=\"move\">{move.name}</h3>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        <div className=\"catch_div\">\r\n            <a onClick={() => {\r\n                setNumber(Math.round(Math.random()));\r\n\r\n                if (number === 0) {\r\n\r\n                    MySwal.fire({\r\n                        input: 'text',\r\n                        inputLabel: 'Enter a Nickname',\r\n                        inputPlaceholder: 'Type your Nickname',\r\n                        confirmButtonText: 'Look up',\r\n                        showCancelButton: true\r\n                    }).then((result) => {\r\n\r\n                        if (result.isConfirmed) {\r\n\r\n\r\n\r\n                            var request = db.transaction(['data'], 'readwrite').objectStore('data');\r\n\r\n\r\n                            request.openCursor().onsuccess = function (event) {\r\n                                var cursor = event.target.result;\r\n                                console.log(cursor)\r\n\r\n                                if (!cursor) {\r\n                                    var request = db.transaction([\"data\"], \"readwrite\")\r\n                                        .objectStore(\"data\").add({\r\n                                            id: result.value,\r\n                                            poke: match.params.id,\r\n                                            image: data.pokemon.sprites.front_default\r\n                                        });\r\n\r\n                                    request.onsuccess = function (event) {\r\n                                        MySwal.fire('success adding')\r\n                                    };\r\n\r\n                                    request.onerror = function (event) {\r\n                                        alert(\"error\");\r\n                                    }\r\n                                } else if (cursor) {\r\n                                    if (cursor.value.id !== result.value) {\r\n                                        MySwal.fire('Pokemon Added!')\r\n                                        request = db.transaction([\"data\"], \"readwrite\")\r\n                                            .objectStore(\"data\").add({\r\n                                                id: result.value,\r\n                                                poke: match.params.id,\r\n                                                image: data.pokemon.sprites.front_default\r\n\r\n                                            });\r\n\r\n                                        request.onsuccess = function (event) {\r\n\r\n                                            MySwal.fire('success adding')\r\n                                        };\r\n\r\n                                        request.onerror = function (event) {\r\n                                            MySwal.fire('Nickname Already Exists!')\r\n                                        }\r\n\r\n                                    } else if (cursor.value.id === result.value) {\r\n                                        MySwal.fire('Nickname Already Exists!')\r\n                                    }\r\n\r\n\r\n                                }\r\n\r\n\r\n                            };\r\n                        }\r\n                    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                } else if (number === 1) {\r\n                    MySwal.fire({\r\n                        title: <p className=\"text_roboto\">It Got Away!</p>\r\n\r\n                    })\r\n                }\r\n            }}\r\n                className=\"catch\">\r\n                <img src={masterball} alt=\"\" width=\"100\" />\r\n\r\n            </a>\r\n            <h2 className=\"catch_text\">Catch!</h2>\r\n        </div>\r\n\r\n    </div >);\r\n\r\n}\r\nexport default Poke_Detail;","D:\\pokemon\\src\\component\\nav.js",["36","37","38","39"],"D:\\pokemon\\src\\component\\mypokemon.js",["40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"49","severity":1,"message":"50","line":93,"column":13,"nodeType":"51","endLine":180,"endColumn":35},{"ruleId":"45","severity":1,"message":"52","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":61,"column":33,"nodeType":"51","endLine":61,"endColumn":36},{"ruleId":"49","severity":1,"message":"50","line":72,"column":33,"nodeType":"51","endLine":72,"endColumn":57},{"ruleId":"49","severity":1,"message":"50","line":90,"column":33,"nodeType":"51","endLine":90,"endColumn":57},{"ruleId":"53","severity":1,"message":"54","line":19,"column":18,"nodeType":"55","endLine":19,"endColumn":32},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'react' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'db' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","no-global-assign","no-unsafe-negation"]